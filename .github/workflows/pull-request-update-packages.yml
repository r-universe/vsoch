name: pull-request-update-packages

on:
  pull_request:
    types:
      - opened

jobs:
  UpdatePackages:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v1
    - name: Inspect Payload
      env:
        SENDER: "dependabot-preview[bot]"
        LABEL_AGAINST: r-universe:master
        LABEL_FROM: r-universe:dependabot/submodules
      run: |
        sender=$(jq --raw-output .sender.login "${GITHUB_EVENT_PATH}")
        echo "Sender is $sender"
        if [ "${sender}" != "${SENDER}" ]; then
            echo "Invalid sender to update submodules."
            exit 78;
        fi
        label=$(jq --raw-output .pull_request.base.label "${GITHUB_EVENT_PATH}")
        echo "Repository and branch to open pull request against is $label"
        if [ "${label}" != "${LABEL_AGAINST}" ]; then
            echo "Invalid repository and branch to open PR against."
            exit 78;
        fi
        label_from=$(jq --raw-output .pull_request.head.label "${GITHUB_EVENT_PATH}")
        echo "Repository and branch creating pull request: $label_from"
        if [[ ${label_from} != *"${LABEL_FROM}"* ]]; then
            echo "Invalid repository and branch to give pull request."
            exit 78;
        fi

  BuildPackages:
    needs: UpdatePackages
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        - { os: windows-latest, r: '3.6', args: "--no-manual"}
        - { os: macOS-latest, r: '3.6'}
        - { os: ubuntu-18.04, r: '3.6', cran: "https://demo.rstudiopm.com/all/__linux__/bionic/latest", args: "--no-manual" }

    name: R ${{ matrix.config.r }} OS {{ matrix.config.os }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v1
    - name: Inspect Payload
      env:
        TOKEN: ${{ secrets.GITHUB_TOKEN }}      
      run: |
        cat ${GITHUB_EVENT_PATH}
        # TODO need to get the submodule updated name from the branch merged
        sender=$(jq --raw-output .sender.login "${GITHUB_EVENT_PATH}")
        echo "Sender is $sender"
        label=$(jq --raw-output .pull_request.base.label "${GITHUB_EVENT_PATH}")
        echo "Repository and branch to open pull request against is $label"
        label_from=$(jq --raw-output .pull_request.head.label "${GITHUB_EVENT_PATH}")
        echo "Repository and branch creating pull request: $label_from"
        # Ensure that we fail so we can easily run again :)
        exit 1;
    - name: Merge pull requests
      uses: pascalgn/automerge-action@v0.6.1
      env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MERGE_LABELS: ""
          MERGE_FORKS: "false"
          UPDATE_LABELS: ""
