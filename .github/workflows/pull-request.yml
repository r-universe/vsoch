name: pull-request-updated-package

on:
  pull_request: []

jobs:
  UpdatePackages:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v1
    - name: Inspect Payload
      env:
        ACTION: opened
        SENDER: "[dependabot-preview][bot]"
        LABEL_AGAINST: r-universe:master
        LABEL_FROM: r-universe:dependabot/submodules
      run: |
        # Sanity checks about event and sender
        action=$(jq --raw-output .action "${GITHUB_EVENT_PATH}")
        if [ "${action}" != "${ACTION}" ]; then
            echo "Pull Request event only intended for newly opened pull requests."
            exit 0;
        fi
        sender=$(jq --raw-output .sender.login "${GITHUB_EVENT_PATH}")
        if [ "${sender}" != "${SENDER}" ]; then
            echo "Invalid sender to update submodules."
            exit 0;
        fi
        label=$(jq --raw-output .pull_request.base.label "${GITHUB_EVENT_PATH}")
        if [ "${label}" != "${LABEL_AGAINST}" ]; then
            echo "Invalid repository and branch to open PR against."
            exit 0;
        fi
        label_from=$(jq --raw-output .pull_request.head.label "${GITHUB_EVENT_PATH}")
        if [[ ${label_from} != *"${LABEL_FROM}"* ]]; then
            echo "Invalid repository and branch to give pull request."
            exit 0;
        fi
    - name: Build Package
      env:
        TOKEN: ${{ secrets.GITHUB_TOKEN }}      
      run: |
        # Sanity checks about event and sender
        echo "Build goes here!"
    - name: Merge Updated Branch
      env:
        BRANCH_AGAINST: master
        TOKEN: ${{ secrets.GITHUB_TOKEN }}   
      run: |
        BRANCH_FROM=$(jq --raw-output .pull_request.head.ref "${GITHUB_EVENT_PATH}")
        echo "Deploying $BRANCH_FROM back to $BRANCH_AGAINST"
        echo "GitHub Actor: ${GITHUB_ACTOR}";
        git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git";
        git branch;
        git checkout "${BRANCH_FROM}";
        git branch;
        git config --global user.name "github-actions";
        git config --global user.email "github-actions@users.noreply.github.com";
        git push origin "${BRANCH_FROM}";
